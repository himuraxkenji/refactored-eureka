{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categorias","setCategorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"sPAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAmB9C,OACE,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAOd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAnBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YAwB3BZ,EAAYe,UAAY,CACtBd,c,OAAee,EAAUC,KAAKC,Y,2BClCnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAUH,GAF3C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIAA,EAAKC,OAJL,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAQ,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAItC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGrB,yBAAKgB,UAAU,0CACb,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCLGS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEdlB,mBAAS,CACjCyB,KAAM,GACNe,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAbAC,qBAAU,WAER1B,EAAQC,GACL0B,MAAK,SAAAC,GACJH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAId,CAACtB,IAGGuB,EDlByBK,CAAa5B,GAAhCa,EAHwB,EAG9BN,KAAce,EAHgB,EAGhBA,QAGrB,OACE,oCACE,wBAAIJ,UAAU,qCAAd,IAAoDlB,GACnDsB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAEXL,EAAOJ,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACEmB,IAAKnB,EAAIC,IACLD,UEfLoB,EAAe,WAAO,IAAD,EAEIhD,mBAAS,CAAC,cAFd,mBAEzBiD,EAFyB,KAEbC,EAFa,KAWhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAanD,cAAemD,IAC5B,6BAEA,4BAEID,EAAWtB,KAAI,SAAAwB,GAAS,OACtB,kBAAC,EAAD,CACEJ,IAAKI,EACLjC,SAAUiC,U,MCrBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c6cd13a1.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories(categories => [inputValue, ...categories]);\n      setInputValue('');\n    }\n\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n};\n\nAddCategory.prototype = {\n  setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=deqsJVVGK84aHTsEyhA3tiD3ta89AKar`\n  const resp = await fetch(url);\n  const {data} = await resp.json();\n\n  const gifs = data.map(img => {\n    return ({\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    })\n  })\n\n  return gifs;\n}\n\n\n","import React from 'react';\n\nexport const GifGridItem = ({id, title, url}) => {\n\n  console.log(id, title, url);\n\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from 'react';\nimport {useFetchGifs} from '../hooks/useFetchGifs';\nimport {GifGridItem} from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n\n  const {data: images, loading} = useFetchGifs(category);\n\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\"> {category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n      <div className=\"card-grid\">\n        {\n          images.map(img => (\n            <GifGridItem\n              key={img.id}\n              {...img}\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}\n","import {useState, useEffect} from 'react';\nimport {getGifs} from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n\n  useEffect(() => {\n\n    getGifs(category)\n      .then(imgs => {\n        setState({\n          data: imgs,\n          loading: false\n        })\n      })\n\n  }, [category])\n\n\n  return state;\n}\n","import React, {useState} from 'react';\nimport {AddCategory} from './components/AddCategory';\nimport {GifGrid} from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n  const [categorias, setCategorias] = useState(['One Punch']);\n\n\n  // const handleAdd = () => {\n  //   // setCategorias([...categorias, 'HunterXHunter']);\n  //   setCategorias(cats => [...cats, 'HunterXHunter']);\n  // }\n\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategorias} />\n      <hr />\n\n      <ol>\n        {\n          categorias.map(categoria => (\n            <GifGrid\n              key={categoria}\n              category={categoria}\n            />\n          ))\n        }\n      </ol>\n    </>\n\n  );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}